// I adeed the button as a component because it can be reused in many places in the website
.btn{
    &:link,
    &:visited{
      text-transform: uppercase;
      text-decoration: none;
      padding: 1.5rem 4rem;
      display: inline-block;
      border-radius: 10rem;
      transition: all .2s;
      position: relative;
      font-size: $default-font-size;
      word-spacing: 2px;
  }
  &:hover{
      transform: translateY(-3px);
      box-shadow: 0 1rem 2rem rgba($color-black, .2);
  
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
   }
  }
  &:active{
      transform: translateY(-1px);
      box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }
  
  &--white {
      background-color: $color-white;
      color: $color-grey-dark;
      &::after {
          background-color: $color-white;
      }
  }
  // Pseudo element before and after is treated as a child element of the element it is attached to,V IMPORTANT-always use "CONTENT "property with pseudo element and "DISPLAY" property with pseudo element */
  &::after {
      content: "";
      display: inline-block;
      height: 100%;
      width: 100%;
      border-radius: 10rem;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      transition: all .4s;
  }
  &--animated {
      animation: moveInBottom .5s ease-out .3s;
      // animation-fill-mode this automatically adds the animation to the element when it is loaded on the page */
      animation-fill-mode: backwards;
   }
  }
  .btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
color: $color-grey-dark;
display: inline-block;
text-decoration: none;
border-bottom: 1px solid $color-grey-dark;
padding: 1rem,;
transition: all .2s;

    }
    &:hover {
      background-color: $color-grey-light-1;
      color: $color-black;
      box-shadow: 0 1rem 2rem rgba($color-black, .2);
      transform: translateY(-2px);
    }
    &:active {
        box-shadow: 0 1rem 1rem rgba($color-black, .2);
      transform: translateY(0);
    }
  }